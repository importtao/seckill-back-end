<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="me.importtao.seckillbackend.dao.OrderFormMapper" >
  <resultMap id="BaseResultMap" type="me.importtao.seckillbackend.model.OrderForm" >
    <id column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="goods_id" property="goodsId" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="model" property="model" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="number" property="number" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    order_id, user_id, goods_id, version, model, create_time, number
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from order_form
    where order_id = #{orderId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from order_form
    where order_id = #{orderId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="me.importtao.seckillbackend.model.OrderForm" >
    insert into order_form (order_id, user_id, goods_id, 
      version, model, create_time, 
      number)
    values (#{orderId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{goodsId,jdbcType=VARCHAR}, 
      #{version,jdbcType=INTEGER}, #{model,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{number,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="me.importtao.seckillbackend.model.OrderForm" >
    insert into order_form
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="model != null" >
        model,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="number != null" >
        number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
      <if test="model != null" >
        #{model,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="me.importtao.seckillbackend.model.OrderForm" >
    update order_form
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="model != null" >
        model = #{model,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="me.importtao.seckillbackend.model.OrderForm" >
    update order_form
    set user_id = #{userId,jdbcType=VARCHAR},
      goods_id = #{goodsId,jdbcType=VARCHAR},
      version = #{version,jdbcType=INTEGER},
      model = #{model,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      number = #{number,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>

  <resultMap id="orderResultMap" type="me.importtao.seckillbackend.viewModel.OrderModel" >
    <id column="orderId" property="orderId" jdbcType="VARCHAR" />
    <result column="userId" property="userId" jdbcType="VARCHAR" />
    <result column="goodsId" property="goodsId" jdbcType="VARCHAR" />
    <result column="goodsName" property="goodsName" jdbcType="VARCHAR" />
    <result column="model" property="model" jdbcType="TINYINT" />
    <result column="modelName" property="modelName" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="DOUBLE" />
    <result column="addr" property="addr" jdbcType="VARCHAR" />
    <result column="addrName" property="addrName" jdbcType="VARCHAR" />
    <result column="paycode" property="paycode" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="TINYINT" />
  </resultMap>
  <select id="selectOrderList" resultMap="orderResultMap" parameterType="java.lang.String" >
    select
      f.order_id AS orderId,
      f.user_id AS userId,
      f.goods_id AS goodsId,
      g.name AS goodsName,
      f.model AS model,
      gm.discription AS modelName,
      f.create_time AS createTime,
      f.number AS number,
      i.money AS money,
      concat(a.province,a.city,a.county,a.detail) AS addr,
      concat(a.name,a.tel) AS addrName,
      i.payCode AS paycode,
      i.state AS state
    FROM
    order_form AS f,
    order_info AS i,
      goods AS g,
      goods_model AS gm,
      addr AS a
    WHERE
    f.order_id = i.order_id
    AND f.goods_id = g.goods_id
    AND f.model = gm.model_code
    AND f.goods_id = gm.goods_id
    AND i.addr = a.id
    AND f.user_id = #{userId,jdbcType=VARCHAR}
  </select>

  <select id="selectOrderListBySellerId" resultMap="orderResultMap" parameterType="java.lang.String" >
    SELECT
      f.order_id AS orderId,
      f.user_id AS userId,
      f.goods_id AS goodsId,
      g.name AS goodsName,
      f.model AS model,
      gm.discription AS modelName,
      f.create_time AS createTime,
      f.number AS number,
      i.money AS money,
      i.addr AS addr,
      a.detail AS addrName,
      i.payCode AS paycode,
      i.state AS state
    FROM
      order_form AS f,
      order_info AS i,
      goods AS g,
      goods_model AS gm,
      addr AS a
    WHERE
      f.order_id = i.order_id
      AND f.goods_id = g.goods_id
      AND f.model = gm.model_code
      AND f.goods_id = gm.goods_id
      AND i.addr = a.id
      AND  of.goods_id IN (
        SELECT
          g.goods_id
        FROM
          g.goods as g
        WHERE
          g.seller_id = #{sellerId,jdbcType=VARCHAR}
      )
  </select>

  <select id="selectPendingOrderList" resultMap="orderResultMap" parameterType="java.lang.String" >
    SELECT
      f.order_id AS orderId,
      f.user_id AS userId,
      f.goods_id AS goodsId,
      g.name AS goodsName,
      f.model AS model,
      gm.discription AS modelName,
      f.create_time AS createTime,
      f.number AS number,
      i.money AS money,
      concat(a.province,a.city,a.county,a.detail) AS addr,
      concat(a.name,a.tel) AS addrName,
      i.payCode AS paycode,
      i.state AS state
    FROM
      order_form AS f,
      order_info AS i,
      goods AS g,
      goods_model AS gm,
      addr AS a
    WHERE
      f.order_id = i.order_id
      AND f.goods_id = g.goods_id
      AND f.model = gm.model_code
      AND f.goods_id = gm.goods_id
      AND i.addr = a.id AND
      f.goods_id IN (
    SELECT
    g.goods_id
    FROM
    goods as g
    WHERE
    g.seller_id = #{sellerId,jdbcType=VARCHAR}
    ) AND (oi.state =1 or oi.state =0)
  </select>

  <select id="selectHistoricalOrderList" resultMap="orderResultMap" parameterType="java.lang.String" >
    SELECT
      f.order_id AS orderId,
      f.user_id AS userId,
      f.goods_id AS goodsId,
      g.name AS goodsName,
      f.model AS model,
      gm.discription AS modelName,
      f.create_time AS createTime,
      f.number AS number,
      i.money AS money,
      concat(a.province,a.city,a.county,a.detail) AS addr,
      concat(a.name,a.tel) AS addrName,
      i.payCode AS paycode,
      i.state AS state
    FROM
      order_form AS f,
      order_info AS i,
      goods AS g,
      goods_model AS gm,
      addr AS a
    WHERE
      f.order_id = i.order_id
      AND f.goods_id = g.goods_id
      AND f.model = gm.model_code
      AND f.goods_id = gm.goods_id
      AND i.addr = a.id AND
      f.goods_id  IN (
    SELECT
    g.goods_id
    FROM
    goods as g
    WHERE
    g.seller_id = #{sellerId,jdbcType=VARCHAR}
    ) AND (oi.state =2 or oi.state =3)
  </select>

  <select id="selectOrderDetail" resultMap="orderResultMap" parameterType="java.lang.String" >
    select
      f.order_id AS orderId,
      f.user_id AS userId,
      f.goods_id AS goodsId,
      g.name AS goodsName,
      f.model AS model,
      gm.discription AS modelName,
      f.create_time AS createTime,
      f.number AS number,
      i.money AS money,
      concat(a.province,a.city,a.county,a.detail) AS addr,
      concat(a.name,a.tel) AS addrName,
      i.payCode AS paycode,
      i.state AS state
    FROM
      order_form AS f,
      order_info AS i,
      goods AS g,
      goods_model AS gm,
      addr AS a
    WHERE
      f.order_id = i.order_id
      AND f.goods_id = g.goods_id
      AND f.model = gm.model_code
      AND f.goods_id = gm.goods_id
      AND i.addr = a.id
    AND f.order_id = #{orderId,jdbcType=VARCHAR}
  </select>
</mapper>