<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="me.importtao.seckillbackend.dao.OrderInfoMapper" >
  <resultMap id="BaseResultMap" type="me.importtao.seckillbackend.model.OrderInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="DOUBLE" />
    <result column="addr" property="addr" jdbcType="BIGINT" />
    <result column="payCode" property="paycode" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="reserved_fields" property="reservedFields" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_id, money, addr, payCode, state, reserved_fields
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from order_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from order_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="me.importtao.seckillbackend.model.OrderInfo" >
    insert into order_info (id, order_id, money, 
      addr, payCode, state, 
      reserved_fields)
    values (#{id,jdbcType=BIGINT}, #{orderId,jdbcType=VARCHAR}, #{money,jdbcType=DOUBLE}, 
      #{addr,jdbcType=BIGINT}, #{paycode,jdbcType=VARCHAR}, #{state,jdbcType=TINYINT}, 
      #{reservedFields,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="me.importtao.seckillbackend.model.OrderInfo" >
    insert into order_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="addr != null" >
        addr,
      </if>
      <if test="paycode != null" >
        payCode,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="reservedFields != null" >
        reserved_fields,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="addr != null" >
        #{addr,jdbcType=BIGINT},
      </if>
      <if test="paycode != null" >
        #{paycode,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="reservedFields != null" >
        #{reservedFields,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="me.importtao.seckillbackend.model.OrderInfo" >
    update order_info
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="addr != null" >
        addr = #{addr,jdbcType=BIGINT},
      </if>
      <if test="paycode != null" >
        payCode = #{paycode,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="reservedFields != null" >
        reserved_fields = #{reservedFields,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="me.importtao.seckillbackend.model.OrderInfo" >
    update order_info
    set order_id = #{orderId,jdbcType=VARCHAR},
      money = #{money,jdbcType=DOUBLE},
      addr = #{addr,jdbcType=BIGINT},
      payCode = #{paycode,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT},
      reserved_fields = #{reservedFields,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateState">
    update order_info
    set
    state = #{state,jdbcType=TINYINT}
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
</mapper>